version: "3"

services:

  node-app:
    build:
      context: .
      dockerfile: Dockerfile.dev.node
    container_name: node_app
    restart: unless-stopped
    environment:
      POSTGRES_HOST: node_admin:mysecretpassword@database:5431
      POSTGRES_DB: USERS
    networks:
      - node_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    volumes:
      - ./web/logs:/root/.npm/_logs/
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "8000:8000"

  reverse-proxy:
    container_name: nginx
    image: nginx:latest
    restart: unless-stopped
    networks:
      - node_net
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      node-app:
        condition: service_healthy
  
  database:
    container_name: postgresql
    image: postgres:latest
    environment:
      POSTGRES_USER: node_admin
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: USERS
    ports:
      - 5431
    volumes:
      - ./postgresql:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "node_admin", "-d", "USERS", "-p", "5431"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 5s
    restart: always
    networks:
      - node_net
    # Changes postgresql port to 5433
    command: -p 5431
    
networks:
  node_net:
    name: node_net
    driver: bridge    
